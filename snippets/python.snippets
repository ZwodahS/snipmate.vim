snippet #!
	#!/usr/bin/env python

snippet @header
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet class
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet tryelse Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet tryf Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet tryef Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
snippet main
	if __name__ == '__main__':
		${1:main()}
snippet getopt
	opts , args = getopt(sys.argv[${1}],"${2}",[${3}])
	for opt , arg in opts :
		if opt == ${4} :
			${5}
	assert len(args) == ${6}
snippet _
	__${1:init}__${2}
snippet pdb
	import pdb; pdb.set_trace()
snippet traceback
	import traceback; traceback.print_exc()
